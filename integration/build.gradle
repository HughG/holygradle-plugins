def pluginProjectNames =
    rootProject.allprojects.findAll { it.name.endsWith("-plugin") }.collect { ":" + it.name } 

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.8.2'
    groovy group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.6'
    testCompile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.1'
    
    // These dependencies are assumed to exist in an internal repository. They are not
    // currently published to a public local even though all necessary resources are
    // already in the public domain.
    runtime group: 'org', name: 'sevenZip', version:'9.20.1', configuration: 'basic'

    // Project dependencies
    pluginProjectNames.each { pluginProjectName ->
        testCompile project(pluginProjectName).sourceSets.test.output
    }
}

/*
    Make sure we can compile and publish all plugins locally, before we even try to compile the
    integration test source.  If we can't, we won't be able to run the integration tests anyway, so
    it would be a waste of time.
*/
pluginProjectNames.each { pluginProjectName ->
    def pluginProject = rootProject.findProject(pluginProjectName)
    project.tasks["compileTestGroovy"].dependsOn pluginProject.tasks["publishPluginsLocally"]
}
