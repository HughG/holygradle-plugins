Using pluginsRepoOverride=[active]
:tasks

------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Credentials tasks
-----------------
cacheCredentials - Refreshes and caches all credentials.

Custom Gradle tasks
-------------------
checkPrerequisites - Runs all prerequisite checks.
createWrapper - Creates a Gradle wrapper in the current directory using this instance of Gradle.
doskey - Helps you configure doskey to allow 'gw' to be used from any directory.
openAllBuildscripts - Opens all build-scripts in this workspace using the default program for '.gradle' files.
openGradleProperties - Opens the user's system-wide gradle.properties file.
openInitScript - Opens the init script using the default program for '.gradle' files.
pluginHelp - Opens the help page 'http://ediwiki/mediawiki/index.php/Gradle' in your favourite browser.
versionInfo - Outputs version information about this instance of Gradle.

Dependencies tasks
------------------
beforeFetchSourceDependencies - Runs before source dependencies are fetched, to check authorisation setup. Extend it with doLast if needed.
collectDependencies - Collect all non-source dependencies into a 'local_artifacts' folder.
deleteLinks - Remove all links.
deleteLinksToCache - Delete all links to the unpack cache
extractPackedDependencies - Extract all packed dependencies, to the unpack cache or to the workspace
fetchAllDependencies - Retrieves all 'packedDependencies' and 'sourceDependencies', and sets up necessary links.
fetchAllSourceDependencies - Retrieves all 'sourceDependencies' recursively.
fetchFirstLevelSourceDependencies - Retrieves only the first level 'sourceDependencies'.
rebuildLinks - Rebuild all links.
rebuildLinksToCache - Rebuild all links to the unpack cache
zipDependencies - Collect all non-source dependencies into a 'local_artifacts' ZIP.

DevEnv tasks
------------
beforeBuild - This task is a dependency of all build tasks, so will run before any of them
beforeClean - This task is a dependency of all clean tasks, so will run before any of them
buildDebug - Builds all dependent projects in Debug mode.
buildRelease - Builds all dependent projects in Release mode.
cleanDebug - Cleans all dependent projects in Debug mode.
cleanRelease - Cleans all dependent projects in Release mode.

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'tAPIT'.
dependencyInsight - Displays the insight into a specific dependency in root project 'tAPIT'.
help - Displays a help message
projects - Displays the sub-projects of root project 'tAPIT'.
properties - Displays the properties of root project 'tAPIT'.
tasks - Displays the tasks runnable from root project 'tAPIT'.

Publishing tasks
----------------
afterGenerateDescriptor - Actions to run after all Ivy descriptor generation tasks
afterPublish - Actions to run after all publish tasks
beforeGenerateDescriptor - Actions to run before any Ivy descriptor generation tasks
beforePublish - Actions to run before any publish tasks
createPublishNotes - Creates 'build_info' directory which will be included in published packages.
generateDescriptorFileForIvyPublication - Generates the Ivy Module Descriptor XML file for publication 'ivy'.
generateIvyModuleDescriptor - Backwards-compatibility task for generating ivy.xml files for publication. This task will be removed in a future version of the Holy Gradle. It has been replaced by tasks with name generateDescriptorFileFor<NAME OF PUBLICATION>Publication.
packageEverything - Creates all zip packages for project 'tAPIT'.
publish - Publishes all publications for this module.
repackageEverything - As 'packageEverything' but doesn't auto-generate any files.

Source Dependencies tasks
-------------------------
fixMercurialIni - Modify/create your mercurial.ini file as required.

Stamping tasks
--------------
stampFiles - Stamp things

Unit Test tasks
---------------
unitTestDebug - Run the Debug unit tests for 'tAPIT'.
unitTestRelease - Run the Release unit tests for 'tAPIT'.

Other tasks
-----------
buildAndTestAll - Build 'tAPIT' and all dependent projects in Debug and Release, and run unit tests.
extractSevenZip - Unpack build dependency 'sevenZip'

To see all tasks and more detail, run with --all.

BUILD SUCCESSFUL

Total time: [snipped]
