#
# asciidoc.conf
#
# Asciidoc global configuration file.
# Contains backend independent configuration settings that are applied to all
# AsciiDoc documents.
#

# NOTE 2014-10-07 HughG:
# Add an inline macro for glossary references.
[macros]
(?su)(?<!\w)[\\]?(gloss):(?P<target>\S*?)\[(?P<attrlist>.*?)(?<!\\)\]=gloss

[gloss-inlinemacro]
<a href="glossary.html#gloss-{target}">{1}</a>

# NOTE 2014-10-07 HughG:
# Use pygments by default, unless disabled.
[attributes]
source-highlighter=pygments


ifdef::basebackend-xhtml11[]
# NOTE 2014-10-07 HughG:
# Override the generated header, because it contains an unclosed link tag for pygments.css.
[header]
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
    "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="{lang=en}">
<head>
<meta http-equiv="Content-Type" content="{quirks=application/xhtml+xml}{quirks?text/html}; charset={encoding}" />
<meta name="generator" content="AsciiDoc {asciidoc-version}" />
<meta name="description" content="{description}" />
<meta name="keywords" content="{keywords}" />
<title>{title}</title>
{title%}<title>{doctitle=}</title>
ifdef::linkcss[]
<link rel="stylesheet" href="{stylesdir=.}/{theme=asciidoc}.css" type="text/css" />
ifdef::quirks[]
<link rel="stylesheet" href="{stylesdir=.}/xhtml11-quirks.css" type="text/css" />
endif::quirks[]
ifeval::["{source-highlighter}"=="pygments"]
<link rel="stylesheet" href="{stylesdir=.}/pygments.css" type="text/css" />
endif::[]

# DEPRECATED: 'pygments' attribute.
ifdef::pygments[<link rel="stylesheet" href="{stylesdir=.}/pygments.css" type="text/css" />]

ifdef::toc2[<link rel="stylesheet" href="{stylesdir=.}/toc2.css" type="text/css" />]
<link rel="stylesheet" href="{stylesdir=.}/{stylesheet}" type="text/css" />
endif::linkcss[]
ifndef::linkcss[]
<style type="text/css">
include1::{theme%}{stylesdir=./stylesheets}/asciidoc.css[]
include1::{themedir}/{theme}.css[]
ifdef::quirks[]
include1::{stylesdir=./stylesheets}/xhtml11-quirks.css[]
endif::quirks[]
ifeval::["{source-highlighter}"=="pygments"]
include1::{stylesdir=./stylesheets}/pygments.css[]
endif::[]

# DEPRECATED: 'pygments' attribute.
ifdef::pygments[]
include1::{stylesdir=./stylesheets}/pygments.css[]
endif::pygments[]

ifdef::toc2[]
include1::{stylesdir=./stylesheets}/toc2.css[]
endif::toc2[]
include1::{stylesheet}[]
</style>
endif::linkcss[]
ifndef::disable-javascript[]
ifdef::linkcss[]
<script type="text/javascript" src="{scriptsdir=.}/asciidoc.js"></script>
<script type="text/javascript" src="{scriptsdir=.}/{theme}.js"></script>
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
asciidoc.install({toc,toc2?{toclevels}});
/*]]>*/
</script>
endif::linkcss[]
ifndef::linkcss[]
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir=./javascripts}/asciidoc.js[]
include1::{themedir}/{theme}.js[warnings=False]
asciidoc.install({toc,toc2?{toclevels}});
/*]]>*/
</script>
endif::linkcss[]
endif::disable-javascript[]
ifdef::asciimath[]
ifdef::linkcss[]
<script type="text/javascript" src="{scriptsdir=.}/ASCIIMathML.js"></script>
endif::linkcss[]
ifndef::linkcss[]
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir=./javascripts}/ASCIIMathML.js[]
/*]]>*/
</script>
endif::linkcss[]
endif::asciimath[]
ifdef::latexmath[]
ifdef::linkcss[]
<script type="text/javascript" src="{scriptsdir=.}/LaTeXMathML.js"></script>
endif::linkcss[]
ifndef::linkcss[]
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir=./javascripts}/LaTeXMathML.js[]
/*]]>*/
</script>
endif::linkcss[]
endif::latexmath[]
{docinfo1,docinfo2#}{include:{docdir}/docinfo.html}
{docinfo,docinfo2#}{include:{docdir}/{docname}-docinfo.html}
template::[docinfo]
</head>
<body class="{doctype}"{max-width? style="max-width:{max-width}"}{css-signature? id="{css-signature}"}>
# Article, book header.
ifndef::doctype-manpage[]
<div id="header">
ifndef::notitle[<h1>{doctitle}</h1>]
ifdef::doctitle[]
<span id="author">{author}</span><br />
<span id="email"><code>&lt;<a href="mailto:{email}">{email}</a>&gt;</code></span><br />
<span id="revnumber">version {revnumber}{revdate?,}</span>
<span id="revdate">{revdate}</span>
<br /><span id="revremark">{revremark}</span>
endif::doctitle[]
{toc,toc2#}{toc-placement$auto:}{template:toc}
</div>
endif::doctype-manpage[]
# Man page header.
ifdef::doctype-manpage[]
<div id="header">
<h1>
{doctitle} Manual Page
</h1>
{toc,toc2#}{toc-placement$auto:}{template:toc}
<h2>{manname-title}</h2>
<div class="sectionbody">
<p>{manname} -
   {manpurpose}
</p>
</div>
</div>
endif::doctype-manpage[]
<div id="content">
endif::basebackend-xhtml11[]



ifdef::basebackend-xhtml11,basebackend-html5[]
# NOTE 2014-10-07 HughG:
# Override source block to put the ID on the containing div, for use with jQuery UI tables.
[source-highlight-block]
<div class="listingblock{role? {role}}"{id? id="{id}"}>
<div class="title">{caption=}{title}</div>
<div class="content">
{source-highlighter$highlight:}<pre><code>
|
{source-highlighter$highlight:}</code></pre>
</div></div>
# NOTE 2014-10-07 HughG:
# Just format as pre if no highlighter is configured.
ifeval::["{source-highlighter}"=="none"]
[source-highlight-block]
template::[literalblock]
endif::[]
endif::basebackend-xhtml11,basebackend-html5[]

# Source styles template.
ifdef::basebackend-xhtml11,basebackend-html5[]
# NOTE 2014-10-07 HughG:
# Dummy filter if no highlighter is configured.
ifeval::["{source-highlighter}"=="none"]
[source-filter-style]
source-style=template="source-highlight-block",presubs=(),postsubs=("callouts",),posattrs=("style","language","src_numbered")
endif::[]
endif::basebackend-xhtml11,basebackend-html5[]

[blockdef-listing]
template::[source-filter-style]

# NOTE 2014-10-07 HughG:
# Override default graphviz svg output to have <object> element as start and end tags, rather than
# an empty element, otherwise the document gets cut off at the end of the first included SVG file
# in contemporary versions of Firefox, Chrome, and IE.
ifdef::basebackend-xhtml11[]
[graphviz-svg-block]
<div class="imageblock"{id? id="{id}"}{align? style="text-align:{align};"}{float? style="float:{float};"}>
<div class="content">
<a class="image" href="{link}">
<object data="{imagesdir=}{imagesdir?/}{target}" type="image/svg+xml"></object>
{link#}</a>
</div>
<div class="title">{caption={figure-caption} {counter:figure-number}. }{title}</div>
</div>
endif::basebackend-xhtml11[]

ifdef::basebackend-html[]

[footer-text]
include::{localDoc}/footer.ascinc[]
Version {revnumber}{basebackend-xhtml11?<br />}{basebackend-xhtml11=<br>}
Last updated {docdate} {doctime}

endif::basebackend-html[]