include::stdattr.ascinc[]

= Release Notes

include::sitemap.ascinc[]

== 7.x

=== 7.7.x

==== 7.7.2
(NOT YET PUBLISHED)

* GR #6585 Further bugfixes.

** Make the "private +build+ configuration" mechanism work for +DefaultConfigurationSetType+, not
just for the +WindowsConfigurationSetType+ subclass.

** Create the "private +build+ configuration" automatically if it doesn't already exist.

** Add automatically-generated descriptions for the configurations generated by configuration sets.

** In the default Visual Studio and Web configuration set types, change the names of some axes, so
that they map the variables used in Visual Studio (+configurations+ to +Configuration+, and
+platforms+ to +Platform+).

==== 7.7.1

* GR #6585 Fixed mistake in overall design of configuration mapping.  If module A is mapping to
module B, and doesn't want to export B's "+import+" configurations in its own "+import+"
configurations, it usually still needs to have a mapping to the import configurations of module B,
otherwise headers/etc. will be missing (if the unpack cache is clean).  The fix is to map from a
private configuration "+build+" in A to the "+import+" configurations of B.

==== 7.7.0

* GR #6585 Further bugfixes and improvements based on use in practice.

** Renamed mapConfigurationSet to just configurationSet (similar to the existing +confguration+
method).

** For mapping from a single configuration to a configuration set (or type), require a Configuration
object instead of just a String.  Using a String could mislead users into thinking they can map from
"a configuration *set* by name".

** Changed default configuration set types only have a "...+_common+" configuration for stage
"+import+", rather than also for the "+runtime+" and "+debugging+" stages.

** Bugfix: Referring to "+configurations.foo+" inside a +SourceDependencyHandler+ was intended to
refer to the project configuration called "+foo+", but instead indexed into an internal
"+configurations+" property on the handler.  Renamed the internal property to allow this to work.

** Replaced +DefaultConfigurationSetType.withPrefix+ with a more general method +makeSet+, which
creates a new set and takes a closure to configure it.

** In +DefaultConfigurationSetType+, changed how overriding of "mappings from" is done, to make it
more obvious how to override, and more consistent with "mappings to".

* GR #2693 Deprecated the "+.publishing+" level of the +sourceDependencies+ DSL, because the
configuration inside it is relevant for dependency resolution when building, not only when
publishing.  The configuration mapping methods inside it are now available one level up, directly in
the +SourceDependencyHandler+.

* GR #4676 Removed the never-used option in SourceDependencyHandler to override the group or version
of a published source dependency, because it never really made sense.  Also removed the
+sourceDepdendency.usePublishedVersion+ property. What these were trying to achieve will be provided
by the "GR #6279 source overrides" work when it's merged to default.

* A source dependency will no longer automatically have a mapping between the "+everything+"
configurations of the originating module and the dependency.  This mapping is only added when some
other mapping is added.  This means that you can now have a source dependency with no Gradle project
and no published dependency, for example, to include source or documents from a different source
repository in the current module.  See [TODO: link to doc].

* GR #5847 By default the "relativePath" attribute is no longer added to generated ivy.xml files. GR
#5845 and GR #5846 changed the behaviour on read so that, by default, this value is ignored
anyway. The Ivy files therefore now validate, which will allow us to upgrade to Gradle 1.8 or
higher.

* GR #5823 Changed +DevEnvHandler+ so it no longer assumes (the now rather outdated) Visual Studio
2010 by default.  Now you must specify the version.


=== 7.6.x

==== 7.6.2

* Fixed new bug introduced by previous bugfix (for deleting files with long paths), that read-only
files could not be deleted.

==== 7.6.1

* GR #6585 Bugfixes and improvements based on use in practice.

** Fix a bug introduced in refactoring, which meant that use of packageArtifacts.includeBuildScript
would throw an exception.

** Added a +withPrefix+ method to +ConfigurationSetTypes+ to make it easy for one module to refer to
prefixed configurationSets in another module.  See [TODO: link to doc].

** Added overloads of +mapConfigurationSet+ for mapping a single configuration to a target
configuration set (not just to a target configuration set type).

** Add a simplistic configuration type for "web libraries". May change this in future.  See [TODO:
link to doc].

* Internal bugfix for deleting test output files with paths longer than the Windows maximum.

==== 7.6.0

* Bugfix for symlink creation: Symlinks were testing whether the link target existed before creating
but for relative links this was being done relative to the working directory rather than the link
itself (which is the behaviour Windows uses when creating the link).

* Made gw.bat cope properly with paths with spaces in them (though other parts of the Holy Gradle
may not).

* GR #6585 Add support for creating and mapping sets of related configurations.  Unlike JVM-based
code, native applications often vary by platform, build setup (Debug or Release), etc., as reflected
in the "model" in newer versions of Gradle, and it is natural to map these to separate Gradle
configurations.  This new DSL makes this easier.  See [TODO: link to doc].

include::{localDoc}/release_notes.ascinc[]
