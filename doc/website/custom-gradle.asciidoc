include::stdattr.ascinc[]

= custom-gradle

include::sitemap.ascinc[]


== Overview

=== What is it?

The +custom-gradle+ package is a custom gloss:gradle-distribution[], based on gloss:gradle[] 1.4,
with an extra gloss:init-script[].

You won't usually need to download this manually because if you use a gloss:gradle-wrapper[] then it
should fetch it from your gloss:artifactory[] server automatically. 

The reasons for using a custom distribution of Gradle as opposed to using the original versions from
the Gradle website are:

* to include the custom init script which does several useful things;
* to speed up downloads of Gradle by using an in-house repository.

== How to use it

You need a gloss:gradle-wrapper[] whose properties file refers to a URL corresponding to a
published version of +custom-gradle+. This would normally be published to an Artifactory server.
See the link:first_steps.html[] page for an example of how to set this up.

Once you're using a Gradle Wrapper that refers to +custom-gradle+ then an init-script will
automatically be applied. This adds a little bit of extra functionality to the standard Gradle
distribution, described below.

=== Plugin Base URL

Since version 7.0.0, the gloss:holygradle[] custom wrapper uses an environment variable to allow the
same build script to be used at multiple sites, even if they do not share an gloss:artifactory[]
server.

The environment variable +HOLY_GRADLE_REPOSITORY_BASE_URL+ must be set to the base URL of the
Artifactory web service at your site (for example,
+https://artifact-server.example-corp.com/artifactory/+).  This URL is used to download the plugins,
and can also be used as a base for URLs in the +repositories+ section of your +buld.gradle+, to get
your own gloss:project[]s dependencies.

==== Setup of Base URL

From version link:release_notes.html#&#x5f;custom_gradle_7.5.0[7.5.0] of the gloss:gradle-wrapper[], +gw.bat+ will
attempt to set this variable based on the file +gradle/base-url-lookup.txt+.  You can add this file to your source code,
or it may be available as part of a +wrapper-starter-kit+ in your organisation -- see
link:first_steps.html#&#x5f;setting_up_a_gradle_wrapper[] for details.  The file should be a text file with several
lines of the format "+_DNS-suffix_ _Base-URL_+", for example as follows.

----
foo.com http://artifactory.foo.com/artifactory/
bar.com https://artifacts.internal.bar.com/artfactory/
----

The DNS suffix is taken from the output of +ipconfig.exe+.

For versions before 7.5.0, you must set this manually in your user environment settings.  You should not need to change
it unless your server name changes, or you are working at a different site.

==== Project Property for Base URL

From version 7.2.0, the property +project.holyGradleRepositoryBase+ is automatically added to your project.  This
contains the value of the environment variable, guaranteed to end with a slash (+'/'+).  See the
link:plugin-intrepid.html#_example_build_script[] for how this can be used.


=== Applying Holy Gradle Plugins

The +gplugins+ DSL from the init script makes it easier to use the custom Gradle plugins such as
link:plugin-intrepid.html[] and link:plugin-my-credentials.html[]. To use it put the following at
the top of your +build.gradle+, with the plugin versions of your choice.

[source,groovy]
----
buildscript {
    gplugins.use "intrepid:7.2.5"
    gplugins.use "my-credentials:7.2.5"
}
gplugins.apply()
----

Note that the link:plugin-custom-gradle-core.html[] will automatically be applied whenever you
use the +gplugins+ DSL.

[[_user_gradle]]
=== user.gradle

One of features of the init script is to automatically load +user.gradle+ files that are in the
same directory as the build script. Simply create a Gradle script named +user.gradle+ or
+_build_script_.user.gradle+, where +_build_script_+ is the name of the build script. For example,
consider the following directory structure.

----
<workspace>
|   build.gradle
|   build.user.gradle
|   settings.gradle
+---framework
|   |   framework.gradle
|   |   framework.user.gradle
|   +---src
|   |   ...
|   +---libs
|       ...
+---my_app
    |   my_app.gradle
    |   user.gradle
    +---src
    |   ...
    +---libs
        ...
----

In the above example:

* +settings.gradle+ will be loaded and evaluated before any of the other build scripts. (See
gloss:settings-file[].)
* +build.user.gradle+ will be loaded and evaluated immediately after +build.gradle+.
* +framework/framework.user.gradle+ will be loaded and evaluated immediately after
+framework/framework.gradle+.
* +my_app/user.gradle+ will be loaded and evaluated immediately after 'my_app/my_app.gradle'.

=== Build Script Names

Build scripts are normally called +build.gradle+. In this example we have some build scripts
called +framework.gradle+ and +my_app.gradle+. This is possible because +settings.gradle+ is
auto-generated by the link:plugin-intrepid.html[] and contains some code that allows
sub-project build scripts to be named +build.gradle+ or +_subproject_.gradle+ where +_subproject_+
is the name of the sub-project -- that is, the name of the directory in which the build script
lives.
