import holygradle.util.Helperdef pluginsRepository = artifactoryServer + "plugins-release"def scriptPath = "script/build.gradle"def script = new File(project.projectDir, scriptPath)task makeWrapper(type: Wrapper) {    jarFile "${project.projectDir}/gradle/gradle-wrapper.jar"    scriptFile "${project.projectDir}/gw"}project.gradle.taskGraph.whenReady {    if (project.gradle.taskGraph.hasTask(makeWrapper)) {        def customGradleVersion = Helper.getLatestVersionNumber(project, "holygradle", "custom-gradle")        if (customGradleVersion == null) {            throw new RuntimeException("Could not find any version of holygradle:custom-gradle in the repository.")        }        makeWrapper.gradleVersion customGradleVersion        makeWrapper.distributionUrl pluginsRepository + "/holygradle/custom-gradle/${customGradleVersion}/custom-gradle-${project.gradle.gradleVersion}-${customGradleVersion}.zip"    }}task makeZip(type: Zip) {    dependsOn makeWrapper    group = "Main"    description = 'Creates a zip file containing the starter-kit.'    baseName = project.name    from("gradle") {        into("gradle")    }    from("gw.bat")    from(script) {        into ("/")    }    doFirst {        if (!script.exists()) {            println "Please define the Gradle script to be included in the wrapper starter kit."            println "Create it here: '${scriptPath}'"            throw new RuntimeException("Can't find '${scriptPath}'")        }    }}artifacts {    "default" makeZip}