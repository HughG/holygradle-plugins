/*
    We copy the "gw.bat" to use in new wrappers from the holygradle root gw.bat.  This is because
    it would be hard to do it the other way round -- have the root batch file use one from this
    plugin's resources folder -- because the batch file internally grabs its own location using the
    "%~dp0" trick.
*/

apply plugin: 'groovy'

configurations {
    optional
}

dependencies {
    compile localGroovy()
    compile group: 'net.java.dev.jna', name: 'jna', version: '3.2.7'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task(copyGwBat, type: Copy) {
    into new File(projectDir, "src/main/resources/holygradle")
    from(new File(rootProject.projectDir, "gw.bat"))
}

task(copyGradlewBat, type: Copy) {
    // We don't need a copy of either of these files, because we'll read the info from project
    // properties.  But these files will have changed if those property values changed since the
    // last time this task ran, so we use them to cause this task to re-run.
    from rootProject.tasks['setHgVersionInfo'].outputs.files
    from rootProject.tasks['setPublishVersion'].outputs.files

    into new File(projectDir, "src/main/resources/holygradle")
    from(new File(rootProject.projectDir, "gradlew.bat")) {
        filter { String line -> (line =~ /\[\[GW_SCRIPT_SOURCE_VERSION\]\]/).replaceFirst(rootProject.hgVersionInfo) }
        filter { String line -> (line =~ /\[\[GW_SCRIPT_VERSION\]\]/).replaceFirst(project.version.toString()) }
    }
}

task(copyInitD, type: Copy) {
    // We don't need a copy of either of these files, because we'll read the info from project
    // properties.  But these files will have changed if those property values changed since the
    // last time this task ran, so we use them to cause this task to re-run.
    from rootProject.tasks['setHgVersionInfo'].outputs.files
    from rootProject.tasks['setPublishVersion'].outputs.files
    
    into 'src/main/resources/holygradle/init.d'
    from('src/init.d/') {
        filter { String line -> (line =~ /\[\[INIT_SCRIPT_SOURCE_VERSION\]\]/).replaceFirst(rootProject.hgVersionInfo) }
        filter { String line -> (line =~ /\[\[INIT_SCRIPT_VERSION\]\]/).replaceFirst(project.version) }
    }
}

processResources.dependsOn copyGwBat, copyGradlewBat, copyInitD
